@using Microsoft.AspNetCore.Identity;
@using SkillSharingApp_BAL.DTOs;
@using SkillSharingApp.Models;
@model TutorialDto

@{
    ViewData["Title"] = "Tutorial Details";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-lg-10 col-md-12">
            <h1 class="display-5 text-center">@Model.Title</h1>

            <div class="embed-responsive embed-responsive-16by9 mb-3">
                <iframe class="embed-responsive-item" src="@Model.VideoUrl" allowfullscreen width="1200" height="720"></iframe>
            </div>

            <div class="card mt-3">
                <div class="row g-0">
                    <div class="col-md-4">
                        <img src="@Model.ImageUrl" class="img-thumbnail" alt="Tutorial Image">
                    </div>
                    <div class="col-md-8">
                        <div class="card-body">
                            <h5 class="card-title">Title: @Model.Title</h5>
                            <p class="card-text">Description: @Model.Description</p>
                            <p class="card-text">Duration: @Model.Duration</p>
                            <p class="card-text">Instructions: @Model.Instructions</p>
                        </div>
                    </div>
                </div>
            </div>

            @inject UserManager<ApplicationUser> UserManager

            @if (User.Identity.IsAuthenticated)
            {
                <div class="mt-3">
                    <h3>Add Comment</h3>
                    <form id="commentForm" action="@Url.Action("AddComment", "Comment")" method="post">
                        <input type="hidden" name="tutorialId" value="@Model.Id" />
                        <input type="hidden" name="userId" value="@UserManager.GetUserId(User)" />
                        <div class="form-group">
                            <label for="commentContent">Comment:</label>
                            <textarea class="form-control" id="commentContent" name="content" rows="3"></textarea>
                        </div>
                        <button type="submit" class="btn btn-primary">Submit</button>
                    </form>
                </div>
            }

            @if (Model.Comments != null && Model.Comments.Any())
            {
                <div class="mt-3">
                    <h3>Comments</h3>
                    <ul class="list-group">
                        @foreach (var comment in Model.Comments)
                        {
                            <li class="list-group-item">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div>
                                        <strong>@comment.FirstName @comment.Lastname</strong>
                                        <span class="text-muted">- @comment.DateTime.ToString("yyyy-MM-dd HH:mm")</span>
                                        @if (comment.IsEdited)
                                        {
                                            <span class="badge bg-info">Edited</span>
                                        }
                                    </div>

                                    @if (User.Identity.IsAuthenticated && comment.UserId == UserManager.FindByNameAsync(User.Identity.Name)?.Result.Id)
                                    {
                                        <div class="dropdown">
                                            <button class="btn btn-secondary btn-sm dropdown-toggle" type="button" id="commentDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                                <i class="bi bi-three-dots-vertical"></i>
                                            </button>
                                            <ul class="dropdown-menu" aria-labelledby="commentDropdown">
                                                <li><a class="dropdown-item" href="@Url.Action("EditComment", "Comment", new { commentId = comment.Id })">Edit</a></li>
                                                <li>
                                                    <form action="@Url.Action("DeleteComment", "Comment", new { commentId = comment.Id })" method="post" onsubmit="return confirm('Are you sure you want to delete this comment?')">
                                                        @Html.AntiForgeryToken()
                                                        <button type="submit" class="dropdown-item">Delete</button>
                                                    </form>
                                                </li>
                                            </ul>
                                        </div>
                                    }
                                </div>
                                <div>@comment.Content</div>
                            </li>
                        }
                    </ul>
                </div>
            }
        </div>
    </div>
</div>
